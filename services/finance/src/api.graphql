schema {
  query: Query
  mutation: Mutation
}

type Query {
  "Gets currently signed in user"
  user: User!
  users: [User]
  project(year: Int!, shortCode: String!): Project
  projects(archived: Boolean): [Project]
  vendor(id: ID!): Vendor
  vendors(isActive: Boolean): [Vendor]
  requisition(year: Int!, shortCode: String!, projectRequisitionId: Int!): Requisition
  "Gets all requisitions created by current user"
  requisitions: [Requisition]
  paymentMethods(isActive: Boolean): [PaymentMethod]
  budget(id: ID!): Budget
  budgets(archived: Boolean): [Budget]
}

type Mutation {
  updateUser(data: UserInput!, id: ID!): User

  createRequisition(data: RequisitionInput!): Requisition
  updateRequisition(data: RequisitionInput!, id: ID!): Requisition

  createProject(data: ProjectInput!): Project
  updateProject(data: ProjectInput!, id: ID!): Project

  createCategory(data: CategoryInput!): Category
  updateCategory(data: CategoryInput!, id: ID!): Category

  createVendor(data: VendorInput!): Vendor
  updateVendor(data: VendorInput!, id: ID!): Vendor

  createBudget(data: BudgetInput!): Budget
  updateBudget(data: BudgetInput!, id: ID!): Budget

  createPaymentMethod(data: PaymentMethodInput!): PaymentMethod
  updatePaymentMethod(data: PaymentMethodInput!, id: ID!): PaymentMethod

  createLineItem(data: LineItemInput!): LineItem
  updateLineItem(data: LineItemInput!, id: ID!): LineItem

  createPayment(data: PaymentInput!): Payment

  createApproval(data: ApprovalInput!): Approval
}

scalar ID
scalar Date
scalar Upload

enum AccessLevel {
  NONE
  MEMBER
  EXEC
  ADMIN
}

enum RequisitionStatus {
  DRAFT
  SUBMITTED
  PENDING_CHANGES
  READY_TO_ORDER
  ORDERED
  PARTIALLY_RECEIVED
  RECEIVED
  CLOSED
  CANCELLED
  READY_FOR_REIMBURSEMENT
  AWAITING_INFORMATION
  REIMBURSEMENT_IN_PROGRESS
}

enum Month {
  JANUARY
  FEBRUARY
  MARCH
  APRIL
  MAY
  JUNE
  JULY
  AUGUST
  SEPTEMBER
  OCTOBER
  NOVEMBER
  DECEMBER
}

type User {
  id: ID!
  uuid: String!
  email: String!
  name: String!
  accessLevel: AccessLevel!
  slackId: String
  canViewAdminPanel: Boolean!
}

input UserInput {
  name: String!
  slackId: String
  accessLevel: AccessLevel!
}

type Approval {
  id: ID!
  requisition: Requisition!
  isApproving: Boolean!
  notes: String
  approver: User!
  date: Date!
}

input ApprovalInput {
  isApproving: Boolean!
  notes: String
  requisition: ID!
}

type Payment {
  id: ID!
  amount: Float!
  fundingSource: PaymentMethod!
  date: String!
  requisition: Requisition!
}

input PaymentInput {
  amount: Float!
  fundingSource: ID!
  date: String!
  requisition: ID!
}

type File {
  id: ID!
  name: String!
  googleName: String!
  mimetype: String!
  isActive: Boolean!
  signedUrl: String!
}

type RequisitionItem {
  id: ID!
  name: String
  quantity: Int
  unitPrice: Float
  link: String
  notes: String
  received: Boolean
  lineItem: LineItem
  vendor: Vendor
}

input RequisitionItemInput {
  name: String
  quantity: Int
  unitPrice: Float
  link: String
  notes: String
  received: Boolean
  lineItem: ID
  vendor: ID
}

type Requisition {
  id: ID!
  headline: String!
  description: String
  items: [RequisitionItem!]!
  status: RequisitionStatus!
  createdBy: User!
  project: Project!
  projectRequisitionId: Int!
  paymentRequiredBy: String
  otherFees: Float
  isReimbursement: Boolean!
  budget: Budget
  approvals: [Approval!]!
  payments: [Payment!]!
  files: [File!]!
  shippingLocation: String
  orderDate: String
  fundingSource: PaymentMethod
  purchaseDate: String
  referenceString: String!
  canEdit: Boolean!
  canCancel: Boolean!
  canExpense: Boolean!
}

input RequisitionInput {
  headline: String
  description: String
  items: [RequisitionItemInput!]
  status: RequisitionStatus!
  project: ID
  paymentRequiredBy: String
  otherFees: Float
  isReimbursement: Boolean
  budget: ID
  files: [Upload!]
  shippingLocation: String
  orderDate: String
  fundingSource: ID
  purchaseDate: String
}

type Project {
  id: ID!
  name: String!
  archived: Boolean!
  leads: [User!]!
  shortCode: String!
  year: Int!
  referenceString: String!
  requisitions: [Requisition!]!
}

input ProjectInput {
  name: String!
  leads: [ID!]!
  shortCode: String!
  year: Int!
  archived: Boolean
}

type Vendor {
  id: ID!
  name: String!
  isActive: Boolean!
}

input VendorInput {
  name: String!
  isActive: Boolean
}

type PaymentMethod {
  id: ID!
  name: String!
  reimbursementInstructions: String
  isDirectPayment: Boolean!
  isActive: Boolean!
}

input PaymentMethodInput {
  name: String!
  isActive: Boolean
  isDirectPayment: Boolean
  reimbursementInstructions: String
}

type LineItem {
  id: ID!
  name: String!
  quantity: Int
  unitCost: Float
  category: Category!
}

input LineItemInput {
  name: String!
  quantity: Int!
  unitCost: Float!
  category: ID!
}

type Category {
  id: ID!
  name: String!
  lineItems: [LineItem!]!
}

input CategoryInput {
  name: String!
  budget: ID!
}

type Budget {
  id: ID!
  name: String!
  categories: [Category!]!
  requisitions: [Requisition!]!
  archived: Boolean!
}

input BudgetInput {
  name: String!
  archived: Boolean
}

type OperatingLineItem {
  id: ID!
  name: String!
  cost: Float
}

type OperatingBudget {
  id: ID!
  month: Month
  year: Int
  lineItems: [OperatingLineItem!]!
}
