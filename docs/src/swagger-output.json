{
  "swagger": "2.0",
  "info": {
    "description": "This is HexLabs' API Documentation.",
    "title": "API Reference",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "users",
      "description": "Everything about users."
    },
    {
      "name": "checkin",
      "description": "Everything about checkin."
    },
    {
      "name": "files",
      "description": "Everything about files."
    },
    {
      "name": "hexathons",
      "description": "Everything about hexathons."
    },
    {
      "name": "notifications",
      "description": "Everything about notifications."
    },
    {
      "name": "registration",
      "description": "Everything about registration."
    },
    {
      "name": "auth",
      "description": "Everything about auth."
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Create the session cookie for a user.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "idToken",
            "in": "body",
            "description": "ID Token.",
            "required": true,
            "schema": {
              "$ref": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cookie policy successfully set"
          },
          "400": {
            "description": "Recent sign in is required"
          }
        }
      }
    },
    "/auth/status": {
      "get": {
        "tags": ["auth"],
        "summary": "User status.",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "customToken": {
                  "type": "string",
                  "description": "Custom token for a user"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["auth"],
        "summary": "User logout.",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status"
          }
        }
      }
    },
    "/firebase-users": {
      "get": {
        "tags": ["auth"],
        "summary": "Finds and displays all users.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "type": "string",
            "description": "",
            "required": false
          },
          {
            "name": "pageToken",
            "in": "query",
            "type": "string",
            "description": "",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "pageSize": {
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/firebase-users/{userId}": {
      "get": {
        "tags": ["auth"],
        "summary": "Finds a user by user ID.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "patch": {
        "tags": ["auth"],
        "summary": "Updates existing user by ID.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "description": "User ID",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "disabled": {
                  "type": "boolean",
                  "description": "To enable/disable a user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "delete": {
        "tags": ["auth"],
        "summary": "Deletes a user by ID.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/firebase-users/email/{email}": {
      "get": {
        "tags": ["auth"],
        "summary": "Finds a user by email",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "type": "integer",
            "description": "User's email",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/checkin": {
      "get": {
        "tags": ["checkin"],
        "summary": "Gets the checkin information of every user.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Checkin"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "post": {
        "tags": ["checkin"],
        "summary": "Checkin a new user.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "hexathon": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Checkin"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/checkin/{id}": {
      "get": {
        "tags": ["checkin"],
        "summary": "Finds and displays checkin by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Checkin id that needs to be considered for filter.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Checkin"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "patch": {
        "tags": ["checkin"],
        "summary": "Update an existing checkin.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Checkin id that needs to be considered for filter.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "body",
            "description": "Status of checkin.",
            "required": true,
            "schema": {
              "$ref": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Checkin"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "tags": ["files"],
        "summary": "Upload a new file.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "No file uploaded!"
          }
        }
      }
    },
    "/files/{id}": {
      "get": {
        "tags": ["files"],
        "summary": "Finds a file by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/files/{id}/signed-url": {
      "get": {
        "tags": ["files"],
        "summary": "Finds and displays file url by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/files/{id}/download": {
      "get": {
        "tags": ["files"],
        "summary": "Finds and displays file download url by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File id that needs to be considered for filter.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/hexathons": {
      "get": {
        "tags": ["hexathons"],
        "summary": "Finds and displays information of all hexathons.",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hexathon"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "post": {
        "tags": ["hexathons"],
        "summary": "Create a new hexathon.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "shortCode": {
                  "type": "string",
                  "required": true,
                  "unique": true
                },
                "isActive": {
                  "type": "boolean"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "required": true
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hexathon"
              }
            }
          },
          "400": {
            "description": "Please add all fields"
          }
        }
      }
    },
    "/hexathons/{id}": {
      "get": {
        "tags": ["hexathons"],
        "summary": "Finds and displays hexathon by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hexathon id that needs to be considered for filter.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hexathon"
              }
            }
          },
          "400": {
            "description": "Hexathon not found"
          }
        }
      },
      "put": {
        "tags": ["hexathons"],
        "summary": "Update an existing hexathon by id.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hexathon id that needs to be considered for filter.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hexathon"
              }
            }
          },
          "400": {
            "description": "Hexathon not found"
          }
        }
      }
    },
    "/interactions": {
      "get": {
        "tags": ["hexathons"],
        "summary": "Finds and displays information of all interactions.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "hexathon",
            "in": "query",
            "description": "hexathon id that needs to be considered for filter.",
            "required": true,
            "type": "integer",
            "collectionFormat": "multi"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User id that needs to be considered for filter.",
            "required": true,
            "type": "integer",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Invalid status"
          }
        }
      },
      "post": {
        "tags": ["hexathons"],
        "summary": "Create a new interaction.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "identifier": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Interaction already exists for this user and identifier"
          }
        }
      }
    },
    "/interactions/{id}": {
      "put": {
        "tags": ["hexathons"],
        "summary": "Update an existing interaction by id.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Interaction id that needs to be considered for filter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "identifier": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/email/send": {
      "post": {
        "tags": ["notifications"],
        "summary": "Send an email.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "$ref": ""
                  }
                },
                "subject": {
                  "type": "string"
                },
                "headerImage": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent"
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/text/send": {
      "post": {
        "tags": ["notifications"],
        "summary": "Send a text.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "numbers": {
                  "type": "array",
                  "items": {
                    "$ref": ""
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent"
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": ["registration"],
        "summary": "Finds and displays information of all applications without data.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "hexathon",
            "in": "query",
            "description": "Filter applications by hexathon id",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Filter applications by user id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicApplication"
              }
            }
          },
          "400": {
            "description": "Invalid status"
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": ["registration"],
        "summary": "Finds and displays application by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Application id that needs to be considered for filter.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "400": {
            "description": "Invalid status"
          }
        }
      }
    },
    "/applications/actions/choose-application-branch": {
      "post": {
        "tags": ["registration"],
        "summary": "Creates a new application based on the branch chosen.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hexathon": {
                  "type": "string"
                },
                "applicationBranch": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/applications/{id}/actions/save-application-data": {
      "post": {
        "tags": ["registration"],
        "summary": "Saves application data.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Application id.",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "applicationData": {
                  "type": "object"
                },
                "branchFormPage": {
                  "type": "number"
                },
                "validateData": {
                  "type": "boolean",
                  "description": "If true, then the data will be validated before saving."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "hexathon": {
                  "type": "string"
                },
                "applicationData": {
                  "type": "object"
                },
                "applicationBranch": {
                  "$ref": "#/definitions/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/applications/{id}/actions/submit-application": {
      "post": {
        "tags": ["registration"],
        "summary": "Submit an application.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Application id.",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/applications/{id}/actions/save-confirmation-data": {
      "post": {
        "tags": ["registration"],
        "summary": "Saves confirmation data.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Application id.",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "confirmationData": {
                  "type": "object"
                },
                "branchFormPage": {
                  "type": "number"
                },
                "validateData": {
                  "type": "boolean",
                  "description": "If true, then the data will be validated before saving."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "hexathon": {
                  "type": "string"
                },
                "confirmationData": {
                  "type": "object"
                },
                "confirmationBranch": {
                  "$ref": "#/definitions/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/applications/{id}/actions/submit-confirmation": {
      "post": {
        "tags": ["registration"],
        "summary": "Submit a confirmation.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Application id.",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/branches": {
      "get": {
        "tags": ["registration"],
        "summary": "Finds and displays information of all branches.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "hexathon",
            "in": "query",
            "description": "Hexathon id that needs to be considered for filter.",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Branch"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "post": {
        "tags": ["registration"],
        "summary": "Create a new branch.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "hexathon": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "open": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "close": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "jsonSchema": {
                  "type": "object",
                  "default": {}
                },
                "uiSchema": {
                  "type": "object",
                  "default": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/branches/{id}": {
      "get": {
        "tags": ["registration"],
        "summary": "Find a branch by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "patch": {
        "tags": ["registration"],
        "summary": "Update an existing branch by id.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Branch id to be updated.",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "hexathon": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "open": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "close": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "jsonSchema": {
                  "type": "object",
                  "default": {}
                },
                "uiSchema": {
                  "type": "object",
                  "default": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "tags": ["registration"],
        "summary": "Displays registration statistics.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "hexathon",
            "in": "query",
            "type": "integer",
            "description": "Hexathon ID for filter.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "userStatistics": {
                  "type": "object",
                  "properties": {
                    "totalUsers": {
                      "type": "integer"
                    },
                    "appliedUsers": {
                      "type": "integer"
                    },
                    "acceptedUsers": {
                      "type": "integer"
                    },
                    "confirmedUsers": {
                      "type": "integer"
                    },
                    "nonConfirmedUsers": {
                      "type": "integer"
                    },
                    "deniedUsers": {
                      "type": "integer"
                    }
                  }
                },
                "applicationStatistics": {
                  "type": "object"
                },
                "confirmationStatistics": {
                  "type": "object"
                },
                "rejectionStatistics": {
                  "type": "object"
                },
                "applicationDataStatistics": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/grading/actions/retrieve-question": {
      "post": {
        "tags": ["registration"],
        "summary": "Gets a question for grading",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hexathon": {
                  "type": "string",
                  "description": "Hexathon ID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "applicationId": {
                  "type": "string"
                },
                "essayId": {
                  "type": "string"
                },
                "branch": {
                  "type": "string"
                },
                "criteria": {
                  "type": "string"
                },
                "question": {
                  "type": "string"
                },
                "answer": {
                  "type": "string"
                },
                "rubricLink": {
                  "type": "string"
                },
                "gradingRubric": {
                  "type": "object"
                },
                "isCalibrationQuestion": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/grading/actions/submit-review": {
      "post": {
        "tags": ["registration"],
        "summary": "Submits a graded question",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "aplicationId": {
                  "type": "string"
                },
                "essayId": {
                  "type": "string"
                },
                "score": {
                  "type": "integer"
                },
                "isCalibrationQuestion": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          }
        }
      }
    },
    "/grading/actions/skip-question": {
      "post": {
        "tags": ["registration"],
        "summary": "Skips a question to grade",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "successful operation"
          }
        }
      }
    },
    "/grading/leaderboard": {
      "get": {
        "tags": ["registration"],
        "summary": "Gets the current grading leaderboard",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "leaderboard": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "numGraded": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "tags": ["users"],
        "summary": "Create a new company.",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "defaultEmailDomains": {
                  "type": "array",
                  "items": {
                    "$ref": ""
                  },
                  "default": []
                },
                "hasResumeAccess": {
                  "type": "boolean",
                  "default": false
                },
                "employees": {
                  "type": "array",
                  "items": {
                    "$ref": ""
                  },
                  "default": []
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Finds and displays company by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "400": {
            "description": "Company not found"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Updates an existing company by id.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "400": {
            "description": "Company not found"
          }
        }
      }
    },
    "/companies/{id}/employees/add": {
      "post": {
        "tags": ["users"],
        "summary": "Adds an employee to the company.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "400": {
            "description": "Company not found"
          }
        }
      }
    },
    "/companies/{id}/employees/": {
      "put": {
        "tags": ["users"],
        "summary": "Updates an employee in the company.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "400": {
            "description": "Company not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Search for a user profile.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "specifies the number of valid objects to return",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string",
            "description": "specifies offset in pagination",
            "required": true
          },
          {
            "name": "regex",
            "in": "query",
            "type": "string",
            "description": "specifies if search term uses regex or not",
            "required": true
          },
          {
            "name": "search",
            "in": "query",
            "type": "string",
            "description": "search term",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "offset": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                },
                "profiles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Profile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create a user's profile.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "middle": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    }
                  }
                },
                "phoneNumber": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "resume": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["users"],
        "summary": "Finds and displays profile by user ID.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/Profile" }, { "$ref": "#/definitions/Permission" }]
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update a user's profile.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    },
    "/users/actions/retrieve": {
      "post": {
        "tags": ["users"],
        "summary": "Gets user profiles by list of userIds",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Profile"
              }
            }
          },
          "400": {
            "description": "Invalid Status"
          }
        }
      }
    }
  },
  "definitions": {
    "Checkin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "hexathon": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "default": "NOT_CHECKED_IN"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Checkin"
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "storageId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "xml": {
        "name": "File"
      }
    },
    "Hexathon": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "shortCode": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "default": true
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Hexathon"
      }
    },
    "Interaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["event", "scavengerHunt"]
        },
        "identifier": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "hexathon": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Interaction"
      }
    },
    "BasicApplication": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "hexathon": {
          "type": "integer"
        },
        "applicationBranch": {
          "$ref": "#/definitions/Branch"
        },
        "applicationStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "applicationSubmitTime": {
          "type": "string",
          "format": "date-time"
        },
        "confirmationBranch": {
          "$ref": "#/definitions/Branch"
        },
        "confirmationStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "confirmationSubmitTime": {
          "type": "string",
          "format": "date-time"
        },
        "confirmationData": {
          "type": "object"
        },
        "status": {
          "type": "string",
          "enum": ["DRAFT", "APPLIED", "ACCEPTED", "CONFIRMED", "DENIED"]
        },
        "gradingComplete": {
          "type": "number"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "BasicApplication"
      }
    },
    "Application": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicApplication"
        },
        {
          "properties": {
            "applicationData": {
              "$ref": "#/definitions/ApplicationData"
            },
            "confirmationData": {
              "type": "object"
            }
          }
        }
      ],
      "xml": {
        "name": "Application"
      }
    },
    "ApplicationData": {
      "type": "object",
      "properties": {
        "adult": {
          "type": "boolean"
        },
        "occupation": {
          "type": "string"
        },
        "school": {
          "type": "string"
        },
        "schoolEmail": {
          "type": "string"
        },
        "schoolYear": {
          "type": "string"
        },
        "graduationYear": {
          "type": "number"
        },
        "major": {
          "type": "string"
        },
        "shirtSize": {
          "type": "string"
        },
        "dietaryRestriction": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "ethnicity": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "line1": {
              "type": "string"
            },
            "line2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip": {
              "type": "number"
            },
            "country": {
              "type": "string"
            }
          }
        },
        "marketing": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "linknedin": {
          "type": "string"
        },
        "extraInfo": {
          "type": "string"
        },
        "confirmChecks": {
          "type": "object"
        },
        "essays": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "criteria": {
                "type": "string"
              },
              "answer": {
                "type": "string"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ApplicationData"
      }
    },
    "Branch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "hexathon": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": ["APPLICATION", "CONFIRMATION"]
        },
        "settings": {
          "type": "object",
          "properties": {
            "open": {
              "type": "string",
              "format": "date-time"
            },
            "closed": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "formPages": {
          "type": "array",
          "items": {
            "properties": {
              "title": {
                "type": "string"
              },
              "jsonSchema": {
                "type": "object",
                "default": {}
              },
              "uiSchema": {
                "type": "object",
                "default": {}
              }
            }
          }
        }
      },
      "xml": {
        "name": "Branch"
      }
    },
    "Grader": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "graded": {
          "type": "number"
        },
        "skipped": {
          "type": "number"
        },
        "currentGradingGroup": {
          "type": "string"
        },
        "completedGradingGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "calibrationScores": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "group": {
                "type": "string"
              },
              "score": {
                "type": "number"
              }
            }
          }
        },
        "calibrationMapping": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "criteria": {
                "type": "string"
              },
              "scoreMappings": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reviewerId": {
          "type": "string"
        },
        "essayId": {
          "type": "string"
        },
        "score": {
          "type": "number"
        },
        "adjustedScore": {
          "type": "number"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "defaultEmailDomains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "hasResumeAccess": {
          "type": "boolean",
          "default": false
        },
        "employees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "xml": {
        "name": "Company"
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string"
            },
            "middle": {
              "type": "string"
            },
            "last": {
              "type": "string"
            }
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "resume": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Profile"
      }
    },
    "Permission": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "roles": {
          "type": "object",
          "properties": {
            "member": {
              "type": "boolean"
            },
            "exec": {
              "type": "boolean"
            },
            "admin": {
              "type": "boolean"
            }
          }
        }
      },
      "xml": {
        "name": "Permission"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "lastSignInTime": {
              "type": "string",
              "format": "date-time"
            },
            "creationTime": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "providerData": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "default": []
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}
